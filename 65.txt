<!DOCTYPE html>
<html lang="ru">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <style>
        body {
            margin-right: 30px;
            /* max-height: 100vh;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center; */

        }

        .small {
            width: 50px;
            height: 50px;
            border: 1px solid #000000;
            /* position: absolute;
            top: 200px;
            left: 30px; */
        }

        .panel {
            border: 1px solid green;
            width: 400px;
            height: 200px;
            display: flex;
        }

        .parent {
            width: 150px;
            height: 150px;
            border: 1px solid #000000;
            margin-top: 100px;
            display: flex;
            flex-wrap: wrap;
        }
    </style>
    <title>AntonVoronezh учеба по JavaScript DOM </title>
</head>






<body>
    <h1>AntonVoronezh учеба по JavaScript DOM</h1>
    <h2>Основы работы с ООП в JavaScript</h2>

    <h2>Простые задачи</h2>

    <h3>Задача 1. Реализуйте класс Worker (Работник), который будет иметь следующие свойства:
        name (имя), surname (фамилия), rate (ставка за день работы), days (количество отработанных дней).
        Также класс должен иметь метод getSalary(), который будет выводить зарплату работника.
        Зарплата - это произведение (умножение) ставки rate на количество отработанных дней days.

        Вот так должен работать наш класс: br

        var worker = new Worker('Иван', 'Иванов', 10, 31);

        console.log(worker.name); //выведет 'Иван'
        console.log(worker.surname); //выведет 'Иванов'
        console.log(worker.rate); //выведет 10
        console.log(worker.days); //выведет 31
        console.log(worker.getSalary()); //выведет 310 - то есть 10*31
        С помощью нашего класса создайте двух рабочих и найдите сумму их зарплат.</h3>

    <script>

        class Worker {

            constructor(argName, argSurname, argRate, argDays) {

                this.name = argName;
                this.surname = argSurname;
                this.rate = argRate;
                this.days = argDays;

            }

            getSalary() {

                return this.rate * this.days;

            }

        };

        const worker = new Worker('Иван', 'Иванов', 10, 31);

        console.log(worker.name); //выведет 'Иван'
        console.log(worker.surname); //выведет 'Иванов'
        console.log(worker.rate); //выведет 10
        console.log(worker.days); //выведет 31
        console.log(worker.getSalary()); //выведет 310 - то есть 10*31


        const worker2 = new Worker('Петр', 'Петров', 20, 31);

        console.log(worker2.name); //выведет 'Иван'
        console.log(worker2.surname); //выведет 'Иванов'
        console.log(worker2.rate); //выведет 10
        console.log(worker2.days); //выведет 31
        console.log(worker2.getSalary()); //выведет 310 - то есть 10*31

        console.log(worker.getSalary() + worker2.getSalary());



    </script>
    <hr>

    <h2>Геттеры и сеттеры</h2>

    <h3>Задача 2. Модифицируйте класс Worker из предыдущей задачи следующим образом:
        сделайте все его свойства приватными, а для их чтения сделайте методы-геттеры.
        Наш класс теперь будет работать так:

        var worker = new Worker('Иван', 'Иванов', 10, 31);

        console.log(worker.getName()); //выведет 'Иван'
        console.log(worker.getSurname()); //выведет 'Иванов'
        console.log(worker.getRate()); //выведет 10
        console.log(worker.getDays()); //выведет 31
        console.log(worker.getSalary()); //выведет 310 - то есть 10*31</h3>

    <script>

        class Worker2 {

            constructor(argName, argSurname, argRate, argDays) {

                this._name = argName;
                this._surname = argSurname;
                this._rate = argRate;
                this._days = argDays;

            }

            getName() {

                return this._name;

            }
            getSurname() {

                return this._surname;

            }
            getRate() {

                return this._rate;

            }
            getDays() {

                return this._days;

            }

            getSalary() {

                return this._rate * this._days;

            }

        };

        const worker21 = new Worker2('Иван', 'Иванов', 10, 31);

        console.log(worker21.getName()); //выведет 'Иван'
        console.log(worker21.getSurname()); //выведет 'Иванов'
        console.log(worker21.getRate()); //выведет 10
        console.log(worker21.getDays()); //выведет 31
        console.log(worker21.getSalary()); //выведет 310 - то есть 10*31





    </script>

    <hr>

    <h3>Задача 3. Модифицируйте класс Worker из предыдущей задачи следующим образом:
        для свойства rate и для свойства days сделайте еще и методы-сеттеры.
        Наш класс теперь будет работать так:

        var worker = new Worker('Иван', 'Иванов', 10, 31);

        console.log(worker.getRate()); //выведет 10
        console.log(worker.getDays()); //выведет 31
        console.log(worker.getSalary()); //выведет 310 - то есть 10*31

        //Теперь используем сеттер:
        worker.setRate(20); //увеличим ставку
        worker.setDays(10); //уменьшим дни
        console.log(worker.getSalary()); //выведет 200 - то есть 20*10</h3>

    <script>

        class Worker3 {

            constructor(argName, argSurname, argRate, argDays) {

                this._name = argName;
                this._surname = argSurname;
                this._rate = argRate;
                this._days = argDays;

            }

            getName() {

                return this._name;

            }
            getSurname() {

                return this._surname;

            }
            getRate() {

                return this._rate;

            }
            setRate(argRate) {

                this._rate = argRate;

            }
            getDays() {

                return this._days;

            }
            setDays(argDate) {
                this._days = argDate;
            }

            getSalary() {

                return this._rate * this._days;

            }

        };

        const worker31 = new Worker3('Иван', 'Иванов', 10, 31);

        console.log(worker31.getRate()); //выведет 10
        console.log(worker31.getDays()); //выведет 31
        console.log(worker31.getSalary()); //выведет 310 - то есть 10*31

        //Теперь используем сеттер:
        worker31.setRate(20); //увеличим ставку
        worker31.setDays(10); //уменьшим дни
        console.log(worker31.getSalary()); //выведет 200 - то есть 20*10





    </script>

    <hr>

    <h2>Практика</h2>

    <h3>Задача 4.Реализуйте класс MyString, который будет иметь следующие методы: метод reverse(),
        который параметром принимает строку, а возвращает ее в перевернутом виде, метод ucFirst(),
        который параметром принимает строку, а возвращает эту же строку, сделав ее первую букву
        заглавной и метод ucWords, который принимает строку и делает заглавной первую букву
        каждого слова этой строки.

        Наш класс должен работать так:

        var str = new MyString();

        console.log(str.reverse('abcde')); //выведет 'edcba'
        console.log(str.ucFirst('abcde')); //выведет 'Abcde'
        console.log(str.ucWords('abcde abcde abcde')); //выведет 'Abcde Abcde Abcde'</h3>


    <script>

        class MyString {

            reverse(argStr) {

                return argStr.split('').reverse().join('');

            }

            ucFirst(argStr) {

                const [first, ...rest] = argStr.split('');

                return first.toUpperCase() + rest.join('');

            }

            ucWords(argStr) {

                const arr = argStr.split(' ');

                const result = [];

                arr.forEach(element => {

                    result.push(this.ucFirst(element));

                });

                return result.join(' ');

            }


        };

        const str = new MyString();

        console.log('abcde', str.reverse('abcde')); //выведет 'edcba'
        console.log(str.ucFirst('abcde')); //выведет 'Abcde'
        console.log(str.ucWords('abcde abcde abcde')); //выведет 'Abcde Abcde Abcde'

    </script>

    <hr>


    <h3>Задача 5. Реализуйте класс Validator, который будет проверять строки.
        К примеру, у него будет метод isEmail параметром принимает строку и проверяет,
        является ли она корректным емейлом или нет. Если является - возвращает true,
        если не является - то false. Кроме того, класс будет иметь следующие методы:
        метод isDomain для проверки домена,
        метод isDate для проверки даты и
        метод isPhone для проверки телефона:

        var validator = new Validator();

        console.log(validator.isEmail('phphtml@mail.ru'));
        console.log(validator.isDomain('phphtml.net'));
        console.log(validator.isDate('12.05.2020'));
        console.log(validator.isPhone('+375 (29) 817-68-92')); //тут можете формат своей страны</h3>


    <script>

        class Validator {

            isEmail(argStr) {

                return /[a-z0-9]@[a-z0-9].[a-z]/.test(argStr);

            }

            isDomain(argStr) {

                return /[a-z0-9].[a-z]{2,5}/.test(argStr);

            }

            isDate(argStr) {

                return /[0-9]{2}.[0-9]{2}.[0-9]{4}/.test(argStr);

            }

            isPhone(argStr) {

                return /\+7\s\([0-9]{2}\)\s[0-9-]{9}/.test(argStr);

            }


        };


        var validator = new Validator();

        console.log('isEmail', validator.isEmail('phphtml@mail.ru'));
        console.log('isDomain',validator.isDomain('phphtml.net'));
        console.log('isDate', validator.isDate('12.05.2020'));
        console.log('isPhone', validator.isPhone('+7 (29) 817-68-92')); //тут можете формат своей страны

    </script>


    <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br>
</body>

</html>